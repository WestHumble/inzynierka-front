// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders empty 1`] = `
<RCTScrollView
  data={[]}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={[]}
>
  <View />
</RCTScrollView>
`;

exports[`renders multiple 1`] = `
<RCTScrollView
  data={
    [
      {
        "data": [
          {
            "eventInvite": {
              "event": {
                "id": 1,
              },
              "id": 1,
              "status": "new",
            },
            "id": 1,
            "notificationType": "eventInvite",
            "title": "title",
          },
        ],
        "title": "Zaproszenia na wydarzenia",
      },
      {
        "data": [
          {
            "friendInvite": {
              "friend": {
                "id": 1,
              },
              "id": 1,
              "status": "new",
            },
            "id": 1,
            "notificationType": "friendInvite",
            "title": "title",
          },
        ],
        "title": "Zaproszenia do znajomych",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    [
      0,
      3,
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#fff",
            "marginTop": 12,
            "padding": 8,
          }
        }
      >
        <Text
          style={
            {
              "color": "#fff",
              "fontSize": 21,
              "fontWeight": "bold",
            }
          }
        >
          Zaproszenia na wydarzenia
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#131417",
            "borderRadius": 20,
            "flexDirection": "row",
            "marginVertical": 4,
            "padding": 16,
            "shadowColor": "black",
            "shadowOffset": {
              "height": -3,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 4,
          }
        }
      >
        <Text
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "color": "#fff",
              "flex": 0.6666666666666666,
              "fontSize": 18,
              "fontWeight": "bold",
            }
          }
        />
        <View
          style={
            {
              "flex": 0.3333333333333333,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 10,
            }
          }
        >
          <View
            style={
              {
                "marginRight": 10,
              }
            }
          >
            <Image
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              resizeMode="contain"
              source={1}
              style={
                {
                  "height": 30,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            <Image
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              resizeMode="contain"
              source={1}
              style={
                {
                  "height": 30,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "color": "#fff",
            "marginTop": 12,
            "padding": 8,
          }
        }
      >
        <Text
          style={
            {
              "color": "#fff",
              "fontSize": 21,
              "fontWeight": "bold",
            }
          }
        >
          Zaproszenia do znajomych
        </Text>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#131417",
            "borderRadius": 20,
            "flexDirection": "row",
            "marginVertical": 4,
            "padding": 16,
            "shadowColor": "black",
            "shadowOffset": {
              "height": -3,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 4,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 0.6666666666666666,
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              onError={[Function]}
              source={
                {
                  "uri": "https://symfony-server-kg.loca.lt/api/avatar/get/1",
                }
              }
              style={
                {
                  "backgroundColor": "#F2B138",
                  "borderRadius": 5,
                  "height": 50,
                  "marginRight": 10,
                  "padding": 1,
                  "shadowColor": "black",
                  "width": 50,
                }
              }
            />
          </View>
          <Text
            style={
              {
                "color": "#fff",
                "flex": 0.6666666666666666,
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
             
          </Text>
        </View>
        <View
          style={
            {
              "flex": 0.3333333333333333,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 10,
            }
          }
        >
          <View
            style={
              {
                "marginRight": 10,
              }
            }
          >
            <Image
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              resizeMode="contain"
              source={1}
              style={
                {
                  "height": 30,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            style={
              {
                "marginLeft": 10,
              }
            }
          >
            <Image
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              resizeMode="contain"
              source={1}
              style={
                {
                  "height": 30,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;
